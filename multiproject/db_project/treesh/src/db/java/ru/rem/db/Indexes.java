/*
 * This file is generated by jOOQ.
*/
package ru.rem.db;


import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;

import ru.rem.db.tables.Channel;
import ru.rem.db.tables.Databasechangeloglock;
import ru.rem.db.tables.Image;
import ru.rem.db.tables.Post;
import ru.rem.db.tables.Thread;
import ru.rem.db.tables.Token;
import ru.rem.db.tables.Users;


/**
 * A class modelling indexes of tables of the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index CHANNEL_PKEY = Indexes0.CHANNEL_PKEY;
    public static final Index DATABASECHANGELOGLOCK_PKEY = Indexes0.DATABASECHANGELOGLOCK_PKEY;
    public static final Index IMAGE_PKEY = Indexes0.IMAGE_PKEY;
    public static final Index POST_PKEY = Indexes0.POST_PKEY;
    public static final Index THREAD_PKEY = Indexes0.THREAD_PKEY;
    public static final Index TOKEN_PKEY = Indexes0.TOKEN_PKEY;
    public static final Index USERS_PKEY = Indexes0.USERS_PKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index CHANNEL_PKEY = Internal.createIndex("channel_pkey", Channel.CHANNEL, new OrderField[] { Channel.CHANNEL.CHANNEL_ID }, true);
        public static Index DATABASECHANGELOGLOCK_PKEY = Internal.createIndex("databasechangeloglock_pkey", Databasechangeloglock.DATABASECHANGELOGLOCK, new OrderField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
        public static Index IMAGE_PKEY = Internal.createIndex("image_pkey", Image.IMAGE, new OrderField[] { Image.IMAGE.IMAGE_ID }, true);
        public static Index POST_PKEY = Internal.createIndex("post_pkey", Post.POST, new OrderField[] { Post.POST.POST_ID }, true);
        public static Index THREAD_PKEY = Internal.createIndex("thread_pkey", Thread.THREAD, new OrderField[] { Thread.THREAD.THREAD_ID }, true);
        public static Index TOKEN_PKEY = Internal.createIndex("token_pkey", Token.TOKEN, new OrderField[] { Token.TOKEN.TOKEN_ID }, true);
        public static Index USERS_PKEY = Internal.createIndex("users_pkey", Users.USERS, new OrderField[] { Users.USERS.ID }, true);
    }
}
