/*
 * This file is generated by jOOQ.
*/
package ru.rem.db.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.rem.db.tables.Token;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenRecord extends UpdatableRecordImpl<TokenRecord> implements Record4<Integer, String, Date, Integer> {

    private static final long serialVersionUID = -694867281;

    /**
     * Setter for <code>public.token.token_id</code>.
     */
    public TokenRecord setTokenId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.token.token_id</code>.
     */
    public Integer getTokenId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.token.token</code>.
     */
    public TokenRecord setToken(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.token.token</code>.
     */
    public String getToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.token.expiry_date</code>.
     */
    public TokenRecord setExpiryDate(Date value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.token.expiry_date</code>.
     */
    public Date getExpiryDate() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>public.token.user_id</code>.
     */
    public TokenRecord setUserId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.token.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Date, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Date, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Token.TOKEN.TOKEN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Token.TOKEN.TOKEN_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return Token.TOKEN.EXPIRY_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Token.TOKEN.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getTokenId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component3() {
        return getExpiryDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getTokenId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getExpiryDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TokenRecord value1(Integer value) {
        setTokenId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TokenRecord value2(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TokenRecord value3(Date value) {
        setExpiryDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TokenRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TokenRecord values(Integer value1, String value2, Date value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TokenRecord
     */
    public TokenRecord() {
        super(Token.TOKEN);
    }

    /**
     * Create a detached, initialised TokenRecord
     */
    public TokenRecord(Integer tokenId, String token, Date expiryDate, Integer userId) {
        super(Token.TOKEN);

        set(0, tokenId);
        set(1, token);
        set(2, expiryDate);
        set(3, userId);
    }
}
